./bin/axd_interpolator \
	QF_TO ./tests/smt2-files/maxdiff_paper_example.smt2 1 100
Solving file ./tests/smt2-files/maxdiff_paper_example.smt2

Iteration #1
Current A-part part 2: 
(Axiom 11)
(=> (>= i3 0) (= (rd a i3) e3))
(=> (distinct i1 i3) (= (rd a i1) (rd a1 i1)))
(=> (>= i1 0) (= (rd a1 i1) e1))
(=> (distinct i3 i1) (= (rd a1 i3) (rd b i3)))
(Axiom 12)
(>= i1 0)
(=> (> i3 i1) (= (rd c2 i3) (rd b i3)))
(=> (> i3 i1) (= (rd c1 i3) (rd a i3)))
(=> (> i1 0) (distinct (rd c2 i1) (rd b i1)))
(=> (> i1 0) (distinct (rd c1 i1) (rd a i1)))
Current B-part part 2: 
(Input)
(> i2 i1)
(> i3 i2)
(distinct fresh_element_0 fresh_element_1)
(= fresh_element_1 (rd c2 i2))
(= fresh_element_0 (rd c1 i2))

Iteration #2
Current A-part part 2: 
(Axiom 11)
(=> (>= i3 0) (= (rd a i3) e3))
(=> (distinct i1 i3) (= (rd a i1) (rd a1 i1)))
(=> (distinct fresh_index_2 i3) (= (rd a fresh_index_2) (rd a1 fresh_index_2)))
(=> (>= i1 0) (= (rd a1 i1) e1))
(=> (distinct i3 i1) (= (rd a1 i3) (rd b i3)))
(=> (distinct fresh_index_2 i1) (= (rd a1 fresh_index_2) (rd b fresh_index_2)))
(Axiom 12)
(>= i1 0)
(=> (> i3 i1) (= (rd c2 i3) (rd b i3)))
(=> (> i3 i1) (= (rd c1 i3) (rd a i3)))
(=> (> i1 0) (distinct (rd c2 i1) (rd b i1)))
(=> (> i1 0) (distinct (rd c1 i1) (rd a i1)))
(=> (> fresh_index_2 i1) (= (rd c2 fresh_index_2) (rd b fresh_index_2)))
(=> (> fresh_index_2 i1) (= (rd c1 fresh_index_2) (rd a fresh_index_2)))
(Axiom 14)
(>= fresh_index_2 0)
(Axiom 17)
(=> (= (rd c2 fresh_index_2) (rd c1 fresh_index_2)) (= fresh_index_2 0))
(Axiom 18)
(=> (> i1 fresh_index_2) (= (rd c2 i1) (rd c1 i1)))
(=> (> i3 fresh_index_2) (= (rd c2 i3) (rd c1 i3)))
Current B-part part 2: 
(Input)
(> i2 i1)
(> i3 i2)
(distinct fresh_element_0 fresh_element_1)
(= fresh_element_1 (rd c2 i2))
(= fresh_element_0 (rd c1 i2))
(Axiom 12)
(=> (> i2 fresh_index_2) (= (rd c2 i2) (rd c1 i2)))
(Axiom 14)
(>= fresh_index_2 0)
(Axiom 17)
(=> (= (rd c2 fresh_index_2) (rd c1 fresh_index_2)) (= fresh_index_2 0))

Iteration #3
Current A-part part 2: 
(Axiom 11)
(=> (>= i3 0) (= (rd a i3) e3))
(=> (distinct i1 i3) (= (rd a i1) (rd a1 i1)))
(=> (distinct fresh_index_2 i3) (= (rd a fresh_index_2) (rd a1 fresh_index_2)))
(=> (distinct fresh_index_3 i3) (= (rd a fresh_index_3) (rd a1 fresh_index_3)))
(=> (>= i1 0) (= (rd a1 i1) e1))
(=> (distinct i3 i1) (= (rd a1 i3) (rd b i3)))
(=> (distinct fresh_index_2 i1) (= (rd a1 fresh_index_2) (rd b fresh_index_2)))
(=> (distinct fresh_index_3 i1) (= (rd a1 fresh_index_3) (rd b fresh_index_3)))
(Axiom 12)
(>= i1 0)
(=> (> i3 i1) (= (rd c2 i3) (rd b i3)))
(=> (> i3 i1) (= (rd c1 i3) (rd a i3)))
(=> (> i1 0) (distinct (rd c2 i1) (rd b i1)))
(=> (> i1 0) (distinct (rd c1 i1) (rd a i1)))
(=> (> fresh_index_2 i1) (= (rd c2 fresh_index_2) (rd b fresh_index_2)))
(=> (> fresh_index_2 i1) (= (rd c1 fresh_index_2) (rd a fresh_index_2)))
(=> (> fresh_index_3 i1) (= (rd c1 fresh_index_3) (rd a fresh_index_3)))
(=> (> fresh_index_3 i1) (= (rd c2 fresh_index_3) (rd b fresh_index_3)))
(Axiom 14)
(>= fresh_index_2 0)
(>= fresh_index_2 fresh_index_3)
(>= fresh_index_3 0)
(Axiom 15)
(=> (> fresh_index_2 fresh_index_3)
    (distinct (rd c2 fresh_index_2) (rd c1 fresh_index_2)))
(Axiom 16)
(=> (= fresh_index_2 fresh_index_3) (= fresh_index_2 0))
(Axiom 17)
(=> (= (rd c2 fresh_index_2) (rd c1 fresh_index_2)) (= fresh_index_2 0))
(=> (= (rd c2 fresh_index_3) (rd c1 fresh_index_3)) (= fresh_index_3 0))
(Axiom 18)
(=> (> i1 fresh_index_2) (= (rd c2 i1) (rd c1 i1)))
(=> (> i3 fresh_index_2) (= (rd c2 i3) (rd c1 i3)))
(=> (> i1 fresh_index_3) (or (= (rd c2 i1) (rd c1 i1)) (= i1 fresh_index_2)))
(=> (> i3 fresh_index_3) (or (= (rd c2 i3) (rd c1 i3)) (= i3 fresh_index_2)))
Current B-part part 2: 
(Input)
(> i2 i1)
(> i3 i2)
(distinct fresh_element_0 fresh_element_1)
(= fresh_element_1 (rd c2 i2))
(= fresh_element_0 (rd c1 i2))
(Axiom 14)
(>= fresh_index_2 0)
(>= fresh_index_2 fresh_index_3)
(>= fresh_index_3 0)
(Axiom 15)
(=> (> fresh_index_2 fresh_index_3)
    (distinct (rd c2 fresh_index_2) (rd c1 fresh_index_2)))
(Axiom 16)
(=> (= fresh_index_2 fresh_index_3) (= fresh_index_2 0))
(Axiom 17)
(=> (= (rd c2 fresh_index_2) (rd c1 fresh_index_2)) (= fresh_index_2 0))
(=> (= (rd c2 fresh_index_3) (rd c1 fresh_index_3)) (= fresh_index_3 0))
(Axiom 18)
(=> (> i2 fresh_index_3) (or (= (rd c2 i2) (rd c1 i2)) (= i2 fresh_index_2)))
(=> (> fresh_index_3 fresh_index_3)
    (or (= (rd c2 fresh_index_3) (rd c1 fresh_index_3))
        (= fresh_index_3 fresh_index_2)))

Unsat after 3 iterations
(let ((a!1 (not (and (<= (diff_ 2 c2 c1) i1) (<= i3 (diff_ 1 c2 c1)))))
      (a!2 (not (and (<= (diff_ 1 c2 c1) i1) (< (diff_ 2 c2 c1) i1))))
      (a!3 (not (= (rd c2 (diff_ 1 c2 c1)) (rd c1 (diff_ 1 c2 c1))))))
(let ((a!4 (and (not (<= i3 (diff_ 1 c2 c1))) a!3 (not (<= (diff_ 1 c2 c1) i1)))))
(let ((a!5 (not (and (<= (diff_ 2 c2 c1) i1) (not a!4)))))
  (and (not (and a!1 a!2 a!5))))))
rm -rf tests/*.o tests/one
