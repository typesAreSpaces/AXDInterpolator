let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/AXDInterpolator
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 src/AXDSignature.cpp
badd +168 src/AXDInterpolant.cpp
badd +1 bin/mathsat
badd +30 tests/main.cpp
badd +51 include/AXDInterpolant.h
badd +22 src/AXDInterpolantCircularPairIterator.cpp
badd +41 Makefile
badd +47 include/Preprocess.h
badd +24 include/StandardInput.h
badd +29 src/Preprocessor.cpp
badd +225 src/StandardInput.cpp
badd +34 src/StandardInputDiffMap.cpp
badd +4 StandardInputWriterVector.cpp
badd +7 include/AXDSignature.h
badd +3 src/AXDSignatureZ3ExprComparator.cpp
badd +1 src/StandardInputWriterVector.cpp
badd +2470 /usr/include/c++/10.2.0/bits/basic_string.h
badd +2054 ~/Documents/GithubProjects/AXDInterpolator/include/z3++.h
argglobal
%argdel
$argadd src/AXDSignature.cpp
edit src/AXDSignature.cpp
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 1resize ' . ((&columns * 74 + 188) / 376)
exe '2resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 2resize ' . ((&columns * 74 + 188) / 376)
exe '3resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 3resize ' . ((&columns * 150 + 188) / 376)
exe '4resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 4resize ' . ((&columns * 75 + 188) / 376)
exe '5resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 5resize ' . ((&columns * 74 + 188) / 376)
exe '6resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 6resize ' . ((&columns * 75 + 188) / 376)
exe '7resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 7resize ' . ((&columns * 75 + 188) / 376)
exe '8resize ' . ((&lines * 50 + 38) / 77)
exe 'vert 8resize ' . ((&columns * 74 + 188) / 376)
exe '9resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 9resize ' . ((&columns * 93 + 188) / 376)
exe '10resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 10resize ' . ((&columns * 93 + 188) / 376)
exe '11resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 11resize ' . ((&columns * 94 + 188) / 376)
exe '12resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 12resize ' . ((&columns * 93 + 188) / 376)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 19 - ((2 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
19
normal! 03|
wincmd w
argglobal
if bufexists("tests/main.cpp") | buffer tests/main.cpp | else | edit tests/main.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 037|
wincmd w
argglobal
if bufexists("src/AXDInterpolant.cpp") | buffer src/AXDInterpolant.cpp | else | edit src/AXDInterpolant.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 375 - ((19 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
375
normal! 017|
wincmd w
argglobal
if bufexists("src/AXDInterpolant.cpp") | buffer src/AXDInterpolant.cpp | else | edit src/AXDInterpolant.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 376 - ((11 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
376
normal! 03|
wincmd w
argglobal
if bufexists("src/AXDInterpolant.cpp") | buffer src/AXDInterpolant.cpp | else | edit src/AXDInterpolant.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 302 - ((4 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
302
normal! 09|
wincmd w
argglobal
if bufexists("src/Preprocessor.cpp") | buffer src/Preprocessor.cpp | else | edit src/Preprocessor.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 52 - ((0 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
52
normal! 011|
wincmd w
argglobal
if bufexists("src/Preprocessor.cpp") | buffer src/Preprocessor.cpp | else | edit src/Preprocessor.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 53 - ((0 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
53
normal! 03|
wincmd w
argglobal
if bufexists("src/StandardInput.cpp") | buffer src/StandardInput.cpp | else | edit src/StandardInput.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 24 - ((0 * winheight(0) + 25) / 50)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
24
normal! 028|
wincmd w
argglobal
if bufexists("include/AXDSignature.h") | buffer include/AXDSignature.h | else | edit include/AXDSignature.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 0
wincmd w
argglobal
if bufexists("include/AXDInterpolant.h") | buffer include/AXDInterpolant.h | else | edit include/AXDInterpolant.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 5 - ((4 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 037|
wincmd w
argglobal
if bufexists("include/Preprocess.h") | buffer include/Preprocess.h | else | edit include/Preprocess.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 4 - ((0 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
4
normal! 028|
wincmd w
argglobal
if bufexists("include/StandardInput.h") | buffer include/StandardInput.h | else | edit include/StandardInput.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2 - ((0 * winheight(0) + 12) / 24)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 0
wincmd w
4wincmd w
exe '1resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 1resize ' . ((&columns * 74 + 188) / 376)
exe '2resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 2resize ' . ((&columns * 74 + 188) / 376)
exe '3resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 3resize ' . ((&columns * 150 + 188) / 376)
exe '4resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 4resize ' . ((&columns * 75 + 188) / 376)
exe '5resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 5resize ' . ((&columns * 74 + 188) / 376)
exe '6resize ' . ((&lines * 25 + 38) / 77)
exe 'vert 6resize ' . ((&columns * 75 + 188) / 376)
exe '7resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 7resize ' . ((&columns * 75 + 188) / 376)
exe '8resize ' . ((&lines * 50 + 38) / 77)
exe 'vert 8resize ' . ((&columns * 74 + 188) / 376)
exe '9resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 9resize ' . ((&columns * 93 + 188) / 376)
exe '10resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 10resize ' . ((&columns * 93 + 188) / 376)
exe '11resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 11resize ' . ((&columns * 94 + 188) / 376)
exe '12resize ' . ((&lines * 24 + 38) / 77)
exe 'vert 12resize ' . ((&columns * 93 + 188) / 376)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
