let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/GithubProjects/AXDInterpolator
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +12 src/AXDSignature.cpp
badd +65 src/AXDInterpolant.cpp
badd +0 bin/mathsat
badd +7 tests/main.cpp
badd +35 include/AXDInterpolant.h
badd +22 src/AXDInterpolantCircularPairIterator.cpp
badd +41 Makefile
badd +47 include/Preprocess.h
badd +24 include/StandardInput.h
badd +1 src/Preprocessor.cpp
badd +225 src/StandardInput.cpp
badd +34 src/StandardInputDiffMap.cpp
badd +4 StandardInputWriterVector.cpp
badd +14 include/AXDSignature.h
badd +3 src/AXDSignatureZ3ExprComparator.cpp
badd +0 src/StandardInputWriterVector.cpp
argglobal
%argdel
$argadd src/AXDSignature.cpp
edit src/AXDSignature.cpp
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
3wincmd h
wincmd w
wincmd w
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
4wincmd h
wincmd w
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 1resize ' . ((&columns * 72 + 144) / 289)
exe '2resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 2resize ' . ((&columns * 73 + 144) / 289)
exe '3resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 3resize ' . ((&columns * 72 + 144) / 289)
exe '4resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 4resize ' . ((&columns * 69 + 144) / 289)
exe '5resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 5resize ' . ((&columns * 58 + 144) / 289)
exe '6resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 6resize ' . ((&columns * 58 + 144) / 289)
exe '7resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 7resize ' . ((&columns * 58 + 144) / 289)
exe '8resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 8resize ' . ((&columns * 58 + 144) / 289)
exe '9resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 9resize ' . ((&columns * 53 + 144) / 289)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 13 - ((12 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
13
normal! 010|
wincmd w
argglobal
if bufexists("src/AXDInterpolant.cpp") | buffer src/AXDInterpolant.cpp | else | edit src/AXDInterpolant.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
if bufexists("src/Preprocessor.cpp") | buffer src/Preprocessor.cpp | else | edit src/Preprocessor.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 126 - ((2 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
126
normal! 08|
wincmd w
argglobal
if bufexists("src/StandardInput.cpp") | buffer src/StandardInput.cpp | else | edit src/StandardInput.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 20) / 41)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 026|
wincmd w
argglobal
if bufexists("include/AXDInterpolant.h") | buffer include/AXDInterpolant.h | else | edit include/AXDInterpolant.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 20 - ((4 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
20
normal! 05|
wincmd w
argglobal
if bufexists("include/AXDSignature.h") | buffer include/AXDSignature.h | else | edit include/AXDSignature.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 8 - ((2 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
8
normal! 038|
wincmd w
argglobal
if bufexists("include/Preprocess.h") | buffer include/Preprocess.h | else | edit include/Preprocess.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 11 - ((8 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 0
wincmd w
argglobal
if bufexists("include/StandardInput.h") | buffer include/StandardInput.h | else | edit include/StandardInput.h | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 39 - ((18 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
39
normal! 04|
wincmd w
argglobal
if bufexists("src/StandardInputWriterVector.cpp") | buffer src/StandardInputWriterVector.cpp | else | edit src/StandardInputWriterVector.cpp | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 15 - ((9 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 06|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 1resize ' . ((&columns * 72 + 144) / 289)
exe '2resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 2resize ' . ((&columns * 73 + 144) / 289)
exe '3resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 3resize ' . ((&columns * 72 + 144) / 289)
exe '4resize ' . ((&lines * 41 + 32) / 65)
exe 'vert 4resize ' . ((&columns * 69 + 144) / 289)
exe '5resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 5resize ' . ((&columns * 58 + 144) / 289)
exe '6resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 6resize ' . ((&columns * 58 + 144) / 289)
exe '7resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 7resize ' . ((&columns * 58 + 144) / 289)
exe '8resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 8resize ' . ((&columns * 58 + 144) / 289)
exe '9resize ' . ((&lines * 21 + 32) / 65)
exe 'vert 9resize ' . ((&columns * 53 + 144) / 289)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
