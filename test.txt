g++ -g -c -o ./tests/basic.o -I./src -I./include -std=c++11 -Wall ./tests/basic.cpp
g++ -g -o tests/basic  ./obj/AXDInterpolant.o  ./obj/AXDSignature.o  ./obj/Preprocessor.o  ./obj/StandardInput.o /home/jose/Documents/GithubProjects/z3__/build/libz3.so  ./tests/basic.o -lpthread -Wall
./tests/basic
A-part part 2: (ast-vector
  (= (rd a i3) e3)                                    // check(o---)
  (=> (distinct i1 i3) (= (rd a i1) (rd a1 i1)))      // check(o---)
  (=> (distinct i3 i3) (= (rd a i3) (rd a1 i3)))      // check(x)
  (=> (distinct i2 i3) (= (rd a i2) (rd a1 i2)))      // check(x)
  (= (rd a1 i1) e1)                                   // check(o---)
  (=> (distinct i1 i1) (= (rd a1 i1) (rd b i1)))      // check(x)
  (=> (distinct i3 i1) (= (rd a1 i3) (rd b i3)))      // check(o---)
  (=> (distinct i2 i1) (= (rd a1 i2) (rd b i2)))      // check(x)
  (=> (> i1 i1) (= (rd c2 i1) (rd b i1)))             // check(x)
  (=> (> i3 i1) (= (rd c2 i3) (rd b i3)))             // check(o---)
  (=> (> i2 i1) (= (rd c2 i2) (rd b i2)))             // check(x)
  (=> (= (rd c2 i1) (rd b i1)) (= i1 0))              // check(o---)
  (=> (> i1 i1) (= (rd c1 i1) (rd a i1)))             // check(x)
  (=> (> i3 i1) (= (rd c1 i3) (rd a i3)))             // check(o---)
  (=> (> i2 i1) (= (rd c1 i2) (rd a i2)))             // check(x)
  (=> (= (rd c1 i1) (rd a i1)) (= i1 0)))             // check(o---)
B-part part 2: (ast-vector
  (< i1 i2)
  (< i2 i3)
  (distinct (rd c1 i2) (rd c2 i2)))
what
rm -rf tests/*.o tests/basic
