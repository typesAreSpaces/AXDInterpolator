; 
(set-info :status unknown)
(declare-sort ElementSort)
 (declare-sort ArraySort)
 (declare-fun i3 () Int)
(declare-fun fresh_index_1 () Int)
(declare-fun rd (ArraySort Int) ElementSort)
(declare-fun c1 () ArraySort)
(declare-fun c2 () ArraySort)
(declare-fun i1 () Int)
(declare-fun fresh_index_0 () Int)
(declare-fun wr (ArraySort Int ElementSort) ArraySort)
(declare-fun e1 () ElementSort)
(declare-fun b () ArraySort)
(declare-fun a1 () ArraySort)
(declare-fun e3 () ElementSort)
(declare-fun a () ArraySort)
(declare-fun diff (ArraySort ArraySort) Int)
(assert
 (let (($x597 (= fresh_index_1 i3)))
 (let ((?x444 (rd c1 fresh_index_1)))
 (let ((?x445 (rd c2 fresh_index_1)))
 (let (($x446 (= ?x445 ?x444)))
 (let (($x611 (= fresh_index_1 i1)))
 (let ((?x367 (* (- 1) fresh_index_1)))
 (let ((?x543 (+ i1 ?x367)))
 (let (($x629 (>= ?x543 0)))
 (let (($x1078 (or $x446 $x629 $x611 (= (not (= ?x444 ?x445)) $x446) $x597)))
 (let ((?x320 (* (- 1) fresh_index_0)))
 (let ((?x321 (+ i1 ?x320)))
 (let (($x407 (>= ?x321 0)))
 (let (($x389 (= fresh_index_0 i1)))
 (let (($x375 (= fresh_index_0 i3)))
 (let ((?x239 (rd c1 fresh_index_0)))
 (let ((?x237 (rd c2 fresh_index_0)))
 (let (($x234 (= ?x237 ?x239)))
 (let (($x1040 (or $x234 $x375 $x389 $x407)))
 (let (($x1151 (or (and $x234 $x1040 $x1078) (and $x1040 $x1078 $x407) (and $x1040 $x1078 $x389) (= (not (= ?x239 ?x237)) $x234) $x375)))
 (let (($x22 (and (= (diff a c1) i1) (= (diff b c2) i1) (= a (wr a1 i3 e3)) (= a1 (wr b i1 e1)))))
 (not (=> $x22 (and $x1151 $x1040 $x1078))))))))))))))))))))))))
(assert
 (forall ((y ArraySort) (i Int) (e ElementSort) )(= (rd (wr y i e) i) e))
 )
(assert
 (forall ((y ArraySort) (i Int) (j Int) (e ElementSort) )(=> (and (distinct i j) true) (= (rd (wr y i e) j) (rd y j))))
 )
(assert
 (forall ((x ArraySort) (y ArraySort) )(=> (and (distinct x y) true) (and (distinct (rd x (diff x y)) (rd y (diff x y))) true)))
 )
(assert
 (forall ((x ArraySort) (y ArraySort) (i Int) )(=> (> i (diff x y)) (= (rd x i) (rd y i))))
 )
(assert
 (forall ((x ArraySort) )(= (diff x x) 0))
 )
(check-sat)
