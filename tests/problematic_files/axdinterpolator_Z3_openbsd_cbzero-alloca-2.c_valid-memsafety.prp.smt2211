; 
(set-info :status unknown)
(declare-fun |c_old(#NULL.offset)| () Int)
(declare-fun |c_#NULL.offset| () Int)
(declare-fun |c_old(#NULL.base)| () Int)
(declare-fun |c_#NULL.base| () Int)
(declare-fun c_main_~nondetArea~0.base_Hier () Int)
(declare-fun |c_cbzero_#in~b.base| () Int)
(declare-fun c_main_~n~0_Hier () Int)
(declare-fun |c_cbzero_#in~length| () Int)
(declare-fun c_main_~nondetArea~0.offset_Hier () Int)
(declare-fun |c_cbzero_#in~b.offset| () Int)
(declare-fun |c_#memory_int_Hier| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int)| () (Array Int (Array Int Int)))
(declare-fun c_main_~length~0_Hier () Int)
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_old(#valid)| () (Array Int Int))
(assert
 (let (($x23 (= |c_#NULL.offset| |c_old(#NULL.offset)|)))
 (let (($x20 (= |c_#NULL.base| |c_old(#NULL.base)|)))
 (let (($x16 (= |c_cbzero_#in~b.base| c_main_~nondetArea~0.base_Hier)))
 (let (($x13 (= |c_cbzero_#in~length| c_main_~n~0_Hier)))
 (let (($x10 (= |c_cbzero_#in~b.offset| c_main_~nondetArea~0.offset_Hier)))
 (let (($x7 (= |c_old(#memory_int)| |c_#memory_int_Hier|)))
 (and true $x7 $x10 $x13 $x16 $x20 $x23))))))))
(assert
 (let (($x34 (<= c_main_~n~0_Hier c_main_~length~0_Hier)))
 (let (($x36 (not $x34)))
 (let (($x33 (<= 1 c_main_~length~0_Hier)))
 (let (($x29 (= |c_old(#NULL.base)| |c_#NULL.base|)))
 (let (($x28 (= |c_old(#NULL.offset)| |c_#NULL.offset|)))
 (let (($x26 (= |c_old(#valid)| |c_#valid|)))
 (and true $x26 $x28 $x29 $x33 $x34 $x36))))))))
(check-sat)
