; 
(set-info :status unknown)
(declare-fun |c_main_~#a~0.offset_primed| () Int)
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_main_~#a~0.base_primed| () Int)
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun c_main_~i~0_primed () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#NULL.base| () Int)
(declare-fun |c_old(#NULL.base)| () Int)
(declare-fun |c_#NULL.offset| () Int)
(declare-fun |c_old(#NULL.offset)| () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(assert
 (let (($x23 (= |c_main_~#a~0.offset_primed| 0)))
 (let (($x21 (= (store |c_#length| |c_main_~#a~0.base_primed| 400000) |c_#length_primed|)))
 (let (($x16 (not (= |c_main_~#a~0.base_primed| 0))))
 (let (($x14 (= (select |c_#valid| |c_main_~#a~0.base_primed|) 0)))
 (let (($x10 (= c_main_~i~0_primed 1)))
 (let (($x63 (not (<= |c_main_~#a~0.base_primed| |c_#StackHeapBarrier|))))
 (and true $x63 $x10 $x14 $x16 $x21 $x23))))))))
(assert
 (let (($x66 (<= |c_main_~#a~0.offset_primed| (+ (- 4) (select |c_#length_primed| |c_main_~#a~0.base_primed|)))))
 (let (($x70 (or (not (= |c_main_~#a~0.offset_primed| 0)) (not (= c_main_~i~0_primed 1)) (not $x66))))
 (let (($x38 (= |c_old(#NULL.base)| |c_#NULL.base|)))
 (let (($x37 (= |c_old(#NULL.offset)| |c_#NULL.offset|)))
 (let (($x35 (= |c_old(#valid)| |c_#valid|)))
 (let (($x33 (= |c_#NULL.offset| |c_old(#NULL.offset)|)))
 (let (($x30 (= |c_#NULL.base| |c_old(#NULL.base)|)))
 (let (($x26 (= |c_#valid_primed| (store |c_#valid| |c_main_~#a~0.base_primed| 1))))
 (and true $x26 $x30 $x33 $x35 $x37 $x38 $x70))))))))))
(check-sat)
